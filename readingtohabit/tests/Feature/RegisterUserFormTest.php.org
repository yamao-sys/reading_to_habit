<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
// use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\TestCase;
use App\Person;
use Illuminate\Support\Facades\Validator;
use App\Http\Requests\RegisterUserRequest;
use Illuminate\Http\Response;

class RegisterUserFormTest extends TestCase
{
    /**
     * A basic feature test example.
     *
     * @return void
     */

    use DatabaseMigrations;

    /**
     * RegisterUserRequestのバリデーションテスト
     *
     * @param array 項目名 => 値
     * @param array 項目名 => 値
     * @dataProvider dataproviderExample
     */

    public function testRegisterUserValidation($data, $error_msg)
    {
        $request = new RegisterUserRequest();
        $rules = $request->rules();
        $messages = $request->messages();
        $validator = Validator::make($data, $rules, $messages);
        $errors = $validator->errors();
        
        $this->assertEquals($error_msg['name'], $errors->first('name'));
        $this->assertEquals($error_msg['email'], $errors->first('email'));
        $this->assertEquals($error_msg['password'], $errors->first('password'));
        $this->assertEquals($error_msg['password_to_check'], $errors->first('password_to_check'));
    }

    /**
     * RegisterUserRequestのバリデーションチェック結果のレスポンスのテスト
     *
     * @param array 項目名 => 値
     * @param array 項目名 => 値
     * @dataProvider dataproviderExample
     */

    public function testRegisterUserView($data, $error_msg)
    {
        $response = $this->post('register_user_check', $data);

        $is_existing_error = false;
        foreach ($error_msg as $msg) {
            if (!empty($msg)) {
                $is_existing_error = true;
            }
        }

        if ($is_existing_error == true) {
            $response->assertStatus(302);
        }
        else {
            $response->assertStatus(200)
                     ->assertViewIs('register_user.register_user_check');
        }
    }

    public function dataproviderExample()
    {
        return [
            '正常' => [[
                            'name' => 'yamao',
                            'email' => 'AAA@BBB.CCC',
                            'password' => 'fipbz8ys',
                            'password_to_check' => 'fipbz8ys',
                        ],
                        [
                            'name' => null,
                            'email'=> null,
                            'password' => null,
                            'password_to_check' => null,
                        ],],
            '必須エラー' => [[
                                'name' => '',
                                'email' => '',
                                'password' => '',
                                'password_to_check' => ''
                             ],
                             [
                                'name' => 'ユーザー名は必須項目です。',
                                'email' => 'メールアドレスは必須項目です。',
                                'password' => 'パスワードは必須項目です。',
                                'password_to_check' => 'パスワード確認用は必須項目です。',
                             ],],
        ];
    }

    /*
    public function dataproviderRegisterUserView()
    {
        return [
            '正常2' => [[
                            'name' => 'yamao',
                            'email' => 'AAA@BBB.CCC',
                            'password' => 'fipbz8ys',
                            'password_to_check' => 'fipbz8ys',
                        ],
                        [
                            'name' => null,
                            'email'=> null,
                            'password' => null,
                            'password_to_check' => null,
                        ],],
            '必須エラー2' => [[
                                'name' => '',
                                'email' => '',
                                'password' => '',
                                'password_to_check' => ''
                             ],
                             [
                                'name' => 'ユーザー名は必須項目です。',
                                'email' => 'メールアドレスは必須項目です。',
                                'password' => 'パスワードは必須項目です。',
                                'password_to_check' => 'パスワード確認用は必須項目です。',
                             ],],
        ];
    }
    */
}
